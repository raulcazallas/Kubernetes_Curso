#Administrador debe montar esos tipos de almacenamiento persistente, para que desarrollo lo utilice
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mis-volumenes-aws
spec:
  storageClassName: redundante
  capacity:
      storage: 100Mi
  accessModes:
    - ReadWriteOnce
  hostPath: #En pro sin sentido, siempre un almacenamiento cloud o red
    path: /redundante

#Desarrollador define el volumen
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: volumen-logs-nginx
spec:
  resources:
    requests:
      storage: 10Mi
  accessModes:
    - ReadWriteOnce
  storageClassName: redundante #Suministrado por el administrador
    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 2
  #Indicar que template va a utilizar
  selector:
    matchLabels:
      app: nginxcluster
  #Plantilla de los pods que creara
  template:
    metadata:
      name: nginx-deployment
      labels:
        app: nginxcluster
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: web
          volumeMounts:
            - mountPath: /logs
              name: web    
              
      #Contenedores que ejecutan algo antes de iniciar el pod y se ejecutan en orden, pensados para lanzar comandos.
      initContainers:
        - name: clonadorweb
          image: ubuntu
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'apt update && apt install git -y && git clone https://github.com/IvanciniGT/datosNginx /configuracion']
          volumeMounts:
            - mountPath: /configuracion
              name: logs
          
      volumes:
        - name: web
          emptyDir: {}
        #Peticion de volumen  
        - name: logs
          persistentVolumeClaim:
            claimName: volumen-logs-nginx
---
apiVersion: v1
kind: Service
metadata:
  name: nginxservice
spec:
  ports:
    - port: 8082
      targetPort: 80
  selector:
    app: nginxcluster